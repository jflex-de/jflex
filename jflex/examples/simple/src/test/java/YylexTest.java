import static com.google.common.truth.Truth.assertThat;
import static com.google.common.truth.Truth.assertWithMessage;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import junit.framework.TestCase;

/**
 * This is an integration test.
 *
 * <p>The class Yylex is generated by JFLex from <code>src/main/jflex/simple.flex</code>.
 *
 * @author Régis Décamps
 */
public class YylexTest extends TestCase {

  private static final String OUTPUT_FILE = "target/output.actual";

  private ByteArrayOutputStream outputStream;

  @Override
  public void setUp() {
    // the Yylex prints status on stdout. Redirect to ByteOutputStream.
    outputStream = new ByteArrayOutputStream();
    System.setOut(new PrintStream(outputStream));
  }

  @Override
  public void tearDown() throws Exception {
    outputStream.close();
  }

  /**
   * Tests that the generated {@link Yylex} lexer behaves like expected.
   */
  public void testOutput() throws Exception {
    String[] argv = new String[1];
    argv[0] = "src/test/data/test.txt";

    Yylex.main(argv);

    // test actual is expected
    File expected = new File("src/test/data/output.good");
    assertThat(expected.isFile()).isTrue();

    byte[] rawOutput = outputStream.toByteArray();
    BufferedReader actualContent = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(rawOutput)));
    BufferedReader expectedContent = new BufferedReader(new FileReader(expected));

    for (int lineNumber = 1; lineNumber != -1; lineNumber++) {
      String expectedLine = expectedContent.readLine();
      String actualLine = actualContent.readLine();
      assertWithMessage("Line " + lineNumber).that(actualLine).isEqualTo(expectedLine);
      if (expectedLine == null)
        lineNumber = -2; // EOF
    }

  }
}
