# Build the user manual

load("@bazel_pandoc//:pandoc.bzl", "pandoc")
load("@bazel_latex//:latex.bzl", "latex_document")
load("//docs:docs.bzl", "DOC_SECTIONS", "replace_placeholders")

# TODO(regisd) Add `output` attribute
# https://github.com/ProdriveTechnologies/bazel-pandoc/pull/1
pandoc(
    name = "html",
    src = "//docs/md:concatenated_md",
    from_format = "markdown",
    # TODO: Add "--css manual.css" when the rule accepts data files
    #
    # TODO: Add "+smart" when the toolchain supports it
    #
    # TODO: Add ["--filter", "pandoc-citeproc"] when #2 is fixed
    # https://github.com/ProdriveTechnologies/bazel-pandoc/issues/2
    options = [],
    output = "manual.html",
    to_format = "html",
)

TEX_SRCS = ["//docs/md:" + section + "_tex" for section in DOC_SECTIONS]

latex_document(
    name = "manual",
    srcs = [
        ":fig/jflex-black.png",
        ":first_page",
        ":latex_content",
        "manual.bib",
    ] + TEX_SRCS + [
        "@bazel_latex//packages:biblatex",
        "@bazel_latex//packages:geometry",
        "@bazel_latex//packages:graphicx",
        "@bazel_latex//packages:hyperref",
        "@bazel_latex//packages:microtype",
        "@bazel_latex//packages:upquote",
        "@bazel_latex//packages:verbatim",
        "@texlive_texmf__texmf-dist__fonts__opentype__public__lm",
    ],
    cmd_flags = ["--bibtex-cmd=biber"],
    main = "manual_full.tex",
)

replace_placeholders(
    name = "first_page",
    src = "manual_first_page.tex",
    out = "_first_page.tex",
    output_to_bindir = True,  # that's where pdf_latex looks into
)

genrule(
    name = "latex_content",
    srcs = TEX_SRCS,
    outs = ["_content.tex"],
    cmd = "echo '" + "\n".join(["\\input{docs/md/" + section + "_tex}" for section in DOC_SECTIONS]) + "' > $@",
    output_to_bindir = True,  # that's where pdf_latex looks into
)

filegroup(
    name = "docs",
    srcs = [
        ":html",
        ":manual",
    ],
)
