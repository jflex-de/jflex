# We also compile on pull requests.
branches:
  only:
  - master

language: java

jdk:
- openjdk7
- oraclejdk8

# Prerequisites for Bazel
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - curl
      - pkg-config
      - zip
      - g++
      - zlib1g-dev
      - unzip
      - python

# Download bazel
before_install:
  - curl -L https://github.com/bazelbuild/bazel/releases/download/0.16.1/bazel_0.16.1-linux-x86_64.deb -o downloads/bazel.deb
  - curl -L https://github.com/google/google-java-format/releases/download/google-java-format-1.6/google-java-format-1.6-all-deps.jar -o downloads/google-java-format.jar

# Install bazel itself
install:
  - sudo dpkg -i downloads/bazel.deb

jobs:
  include:
# TODO(regisd) Reformat code once we are ready to submit
#    - stage: codestyle
#      script: java -jar downloads/google-java-format-1.6-all-deps.jar -n --set-exit-if-changed $(find jflex -name '*.java' | tr '\n' ' ')
    - stage: test
      script:
        - bazel build //cup/sample-project:gen_java
        - bazel build jflex:jflex_gui_bin

env:
  matrix:
  - TEST_SUITE=unit
# TODO - TEST_SUITE=regression

# Travis sometimes fails to download deps from repo1.maven.org
# A cache avoids downloading too much, and will also speed up the build.
# NB: There is one cache per branch and language version/ compiler version/ JDK version
cache:
  # The timeout (in seconds) empties the cache to avoid being stuck with a corrupted artefact
  timeout: 86400  # 24 hours
  directories:
  - downloads

# Build the maven site
#before_deploy: ./scripts/before-deploy.sh

#deploy:
#  provider: pages
#  skip_cleanup: true
  # GITHUB_TOKEN set in travis-ci.org dashboard
#  github_token: $GITHUB_TOKEN
#  on:
#    branch: master
#    condition: $TEST_SUITE = unit
#  local_dir: target/maven-staging-site
#  repo: jflex-de/jflex-web
#  name: Travis site-deploy bot
