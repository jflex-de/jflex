<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>de.jflex</groupId>
    <artifactId>jflex-parent</artifactId>
    <version>1.7.1-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>
  <artifactId>jflex-testsuite-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>JFlex Test Suite Maven Plugin</name>
  <licenses>
    <license>
      <name>BSD</name>
      <url>http://opensource.org/licenses/BSD-3-Clause</url>
    </license>
  </licenses>
  <description>
    Internal-use plugin to run test cases from the JFlex test suite.
  </description>
  <inceptionYear>2009</inceptionYear>
  <developers>
    <developer>
      <id>lsf37</id>
      <name>Gerwin Klein</name>
      <email>lsf@jflex.de</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>steve_rowe</id>
      <name>Steve Rowe</name>
      <email>steve_rowe@users.sf.net</email>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>-5</timezone>
    </developer>
  </developers>
  <build>
    <plugins>
      <plugin>
        <groupId>de.jflex</groupId>
        <artifactId>jflex-maven-plugin</artifactId>
        <version>1.7.1-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- If this dependency is not included, the Ant Javac task can't find
           the javac executable, because Maven automatically changes the
           JAVA_HOME environment variable/system property to point to the
           JRE rather than the JDK.  An alternative to including this dep.
           is setting the Ant Javac object to use forking,
           i.e. "javac.setFork(true);").
           Since Java 9, there is no more split between the JRE and the JDK.
      -->
      <id>jdk_hack</id>
      <activation>
        <jdk>(,1.8]</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>sun.jdk</groupId>
          <artifactId>tools</artifactId>
          <version>1.6.0</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
    </dependency>
    <dependency>
      <groupId>de.jflex</groupId>
      <artifactId>jflex</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
    </dependency>
  </dependencies>
</project>
